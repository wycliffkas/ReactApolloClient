{"version":3,"sources":["logo.png","components/LaunchItem.js","components/Launches.js","components/HistoryItem.js","components/Histories.js","components/Launch.js","components/Navbar.js","components/RocketItem.js","components/Rockets.js","components/Rocket.js","components/History.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","launches","map","key","Component","HistoryItem","history","id","title","event_date_utc","HISTORIES_QUERY","Histories","histories","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","Navbar","href","src","logo","width","height","alt","RocketItem","ROCKETS_QUERY","Rockets","rockets","ROCKET_QUERY","Rocket","wikipedia","description","target","rel","HISTORY_QUERY","History","details","links","reddit","article","client","ApolloClient","uri","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69362755.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d726bf09.png\";","import React from 'react'\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nexport default function LaunchItem({\n    launch:{ flight_number, mission_name, launch_date_local, launch_success }\n}) {\n    return (\n        <div className=\"card card-body mb-3\">\n            <div className=\"row\">\n                <div className=\"col-md-9\">\n                    <h4>Mission: {' '}\n                        <span className={classNames({\n                            'text-success': launch_success,\n                            'text-danger': !launch_success}\n                        )}>{mission_name}</span></h4>\n                    <p>Date: <Moment format=\"dddd, MMMM Do YYYY, h:mm a\">{launch_date_local}</Moment></p>\n                </div>\n                <div className=\"col-md-3\">\n                    <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\n\nconst LAUNCHES_QUERY = gql`\nquery LaunchesQuery {\n    launches {\n        flight_number\n        mission_name\n        launch_date_local\n        launch_success\n    }\n}\n`;\n\nexport default class Launches extends Component {\n    render() {\n        return (\n            <>\n                <h1 className=\"display-4 my-3\">Launches</h1>\n                <div className=\"my-3\">\n                    <p><span className=\"px-3 mr-2 bg-success\" /> = Success</p>\n                    <p><span className=\"px-3 mr-2 bg-danger\" /> = Fail</p>\n                </div>\n                <Query query={LAUNCHES_QUERY}>\n                    {({ loading, error, data }) => {\n                        if (loading) return <h4>Loading...</h4>;\n                        if (error) console.log(error);\n                        return (\n                            <>\n                                {data.launches.map(launch => (\n                                    <LaunchItem key={launch.flight_number} launch={launch} />\n                                ))}\n                            </>\n                        );\n                    }}\n                </Query>\n            </>\n        )\n    }\n}\n","import React from 'react'\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nexport default function HistoryItem({\n    history:{ id, title, event_date_utc }\n}) {\n    return (\n        <div className=\"card card-body mb-3\">\n            <div className=\"row\">\n                <div className=\"col-md-10\">\n                    <h4>Historical Event: <span className=\"text-success\">{title}</span></h4>\n                    <p>Date: <Moment format=\"dddd, MMMM Do YYYY, h:mm a\">{event_date_utc}</Moment></p>\n                </div>\n                <div className=\"col-md-2\">\n                    <Link to={`/history/${id}`} className=\"btn btn-secondary\">Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport HistoryItem from './HistoryItem';\n\nconst HISTORIES_QUERY = gql`\nquery HistoriesQuery {\n    histories {\n        id\n        title\n        event_date_utc\n    }\n}\n`;\n\nexport default class Histories extends Component {\n    render() {\n        return (\n            <>\n                <h1 className=\"display-4 my-3\">History</h1>\n                <Query query={HISTORIES_QUERY}>\n                    {({ loading, error, data }) => {\n                        if (loading) return <h4>Loading...</h4>;\n                        if (error) console.log(error);\n                        return (\n                            <>\n                                {data.histories.map(history => (\n                                    <HistoryItem key={history.id} history={history} />\n                                ))}\n                            </>\n                        );\n                    }}\n                </Query>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\nquery LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n        flight_number\n        mission_name\n        launch_year\n        launch_success\n        launch_date_local\n        rocket {\n            rocket_id\n            rocket_name\n            rocket_type\n        }\n    }\n}\n`;\n\nclass Launch extends Component {\n    render() {\n        let { flight_number } = this.props.match.params;\n        flight_number = parseInt(flight_number);\n\n        return (\n            <>\n                <Query query={LAUNCH_QUERY} variables={{flight_number}}>\n                {\n                    ({ loading, error, data }) => {\n                        if (loading) return <h4>Loading...</h4>;\n                        if (error) console.log(error);\n                        const { mission_name, flight_number, launch_year, launch_success,\n                                rocket: { rocket_id, rocket_name, rocket_type } } = data.launch;\n                        return (\n                            <div>\n                                <h1 className=\"display-4 my-3\">\n                                    <span className=\"text-dark\">Mission:</span> {mission_name}\n                                </h1>\n                                <h4 className=\"mb-3\">Launch Details</h4>\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">Flight Number: {flight_number}</li>\n                                    <li className=\"list-group-item\">Launch Year: {launch_year}</li>\n                                    <li className=\"list-group-item\">\n                                        Launch Successful:{' '}\n                                        <span className={classNames({\n                                            'text-success': launch_success,\n                                            'text-danger': !launch_success\n                                        })}>\n                                            {launch_success ? 'Yes' : 'No'}\n                                        </span>\n                                    </li>\n                                </ul>\n                                <h4 className=\"my-3\">Rocket Details</h4>\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                                    <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n                                    <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n                                </ul>\n                                <hr />\n                                <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\n                            </div>\n                        );\n                    }\n                }\n                </Query>\n            </>\n        )\n    }\n}\n\nexport default Launch;\n","import React from 'react';\nimport logo from '../../src/logo.png';\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar() {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"#\">\n                <img src={logo} width=\"250\" height=\"35\"\n                    className=\"d-inline-block align-top\" alt=\"SpaceX FanClub\" />\n            </a>\n            <ul className=\"nav justify-content-center\">\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link font-weight-bold\">Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/histories\" className=\"nav-link font-weight-bold\">History</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/rockets\" className=\"nav-link font-weight-bold\">Rockets</Link>\n                </li>\n            </ul>\n        </nav>\n\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default function RocketItem({\n    rocket:{ rocket_id, rocket_name }\n}) {\n    return (\n        <div className=\"card card-body mb-3\">\n            <div className=\"row\">\n                <div className=\"col-md-9\">\n                    <h4>Rocket: <span className=\"text-success\">{rocket_name}</span></h4>\n                </div>\n                <div className=\"col-md-3\">\n                    <Link to={`/rockets/${rocket_id}`} className=\"btn btn-secondary\">Rocket Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport RocketItem from './RocketItem';\n\nconst ROCKETS_QUERY = gql`\nquery RocketsQuery {\n    rockets {\n        rocket_id\n        rocket_name\n        rocket_type\n        wikipedia\n        description\n    }\n}\n`;\nexport default class Rockets extends Component {\n    render() {\n        return (\n            <>\n                <h1 className=\"display-4 my-3\">Rockets</h1>\n                <Query query={ROCKETS_QUERY}>\n                    {({ loading, error, data }) => {\n                        if (loading) return <h4>Loading...</h4>;\n                        if (error) console.log(error);\n                        return (\n                            <>\n                                {data.rockets.map(rocket => (\n                                    <RocketItem key={rocket.rocket_id} rocket={rocket} />\n                                ))}\n                            </>\n                        );\n                    }}\n                </Query>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\n\nconst ROCKET_QUERY = gql`\nquery rocket_query($rocket_id: String!){\n    rocket(rocket_id: $rocket_id){\n        rocket_id\n        rocket_name\n        rocket_type\n        wikipedia\n        description\n    }\n}\n`;\n\nclass Rocket extends Component {\n    render() {\n        let { rocket_id } = this.props.match.params;\n        return (\n            <>\n                <Query query={ROCKET_QUERY} variables={{rocket_id}}>\n                {\n                    ({ loading, error, data }) => {\n                        if (loading) return <h4>Loading...</h4>;\n                        if (error) console.log(error);\n                        const { rocket_name, rocket_type, wikipedia, description } = data.rocket;\n                        return (\n                            <div>\n                                <h1 className=\"display-4 my-3\">\n                                    <span className=\"text-dark\">Rocket:</span> {rocket_name}\n                                </h1>\n                                <h4 className=\"mb-3\">Rocket Details</h4>\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">Type:{' '}\n                                        <span className=\"text-success font-weight-bold\">{rocket_type}</span>\n                                    </li>\n                                    <li className=\"list-group-item\">Wiki:{' '}\n                                        <a href={wikipedia} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            Read more about {rocket_name} on Wikipedia!\n                                        </a>\n                                    </li>\n                                    <li className=\"list-group-item\">Description:{' '}\n                                        <span className=\"text-success font-weight-bold\">{description}</span>\n                                    </li>\n                                </ul>\n                                <hr />\n                                <Link to=\"/rockets\" className=\"btn btn-secondary\">Back</Link>\n                            </div>\n                        )\n                    }\n                }\n                </Query>\n            </>\n        )\n    }\n}\n\nexport default Rocket;\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nconst HISTORY_QUERY = gql`\nquery HistoryQuery($id: Int!) {\n    history(id: $id) {\n        id\n        title\n        event_date_utc\n        details\n        links {\n            reddit\n            article\n            wikipedia\n        }\n    }\n}\n`;\n\nclass History extends Component {\n    render() {\n        let { id } = this.props.match.params;\n        id = parseInt(id);\n        return (\n            <>\n                <Query query={HISTORY_QUERY} variables={{id}}>\n                {\n                    ({ loading, error, data }) => {\n                        if (loading) return <h4>Loading...</h4>;\n                        if (error) console.log(error);\n                        const { title, event_date_utc, details, links: {reddit, article, wikipedia }} = data.history;\n                        return (\n                            <div>\n                                <h1 className=\"display-4 my-3\">\n                                    <span className=\"text-dark\">Event:</span> {title}\n                                </h1>\n                                <h4 className=\"mb-3\">Event Details</h4>\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">Details:{' '}\n                                        <span className=\"text-success font-weight-bold\">{details}</span>\n                                    </li>\n                                    <li className=\"list-group-item\">Date:{' '}\n                                    <span className=\"text-success font-weight-bold\">\n                                        <Moment format=\"dddd, MMMM Do YYYY, h:mm a\">{event_date_utc}</Moment>\n                                    </span>\n                                    </li>\n                                    {reddit &&\n                                        <li className=\"list-group-item\">Reddit: {' '}\n                                            <a href={reddit} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                Read more on Reddit!\n                                            </a>\n                                        </li>\n                                    }\n                                    {article &&\n                                        <li className=\"list-group-item\">Article: {' '}\n                                            <a href={article} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                Read more on article!\n                                            </a>\n                                        </li>\n                                    }\n                                    {wikipedia &&\n                                        <li className=\"list-group-item\">Wikipedia: {' '}\n                                            <a href={wikipedia} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                Read more on Wikipedia!\n                                            </a>\n                                        </li>\n                                    }\n                                </ul>\n                                <hr />\n                                <Link to=\"/histories\" className=\"btn btn-secondary\">Back</Link>\n                            </div>\n                        );\n                    }\n                }\n                </Query>\n            </>\n        )\n    }\n}\n\nexport default History;\n","import React from 'react';\nimport './App.css';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport Launches from './components/Launches';\nimport Histories from './components/Histories';\nimport Launch from './components/Launch';\nimport Navbar from './components/Navbar';\nimport Rockets from './components/Rockets';\nimport Rocket from './components/Rocket';\nimport History from './components/History';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <Route exact path=\"/\" component={Launches} />\n        <Route exact path=\"/histories\" component={Histories} />\n        <Route exact path=\"/rockets\" component={Rockets} />\n        <Route exact path=\"/launch/:flight_number\" component={Launch} />\n        <Route exact path=\"/rockets/:rocket_id\" component={Rocket} />\n        <Route exact path=\"/history/:id\" component={History} />\n      </div>\n    </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}